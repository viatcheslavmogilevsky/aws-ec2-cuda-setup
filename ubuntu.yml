---
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - set_fact:
        aws_region: "{{ lookup('env','AWS_REGION') }}"

    - ec2_ami_search:
        distro: ubuntu
        release: trusty
        region: "{{ aws_region }}"
        virt: hvm
      register: ami_find

    - ec2_key:
        name: ubuntu_key
        wait: yes
      register: key_data

    - copy:
        content: "{{ key_data.key.private_key }}"
        dest: secrets/ubuntu-private-key-file
        mode: 0600
      when: key_data.key.private_key|default(0)

    - ec2_vpc:
        state: present
        cidr_block: 10.0.0.0/16
        resource_tags:
          Environment: Development
          Name: cuda-host
        wait: yes
        internet_gateway: yes
        subnets:
          - cidr: 10.0.0.0/24
            az: "{{ aws_region }}a"
        route_tables:
          - subnets:
              - 10.0.0.0/24
            routes:
              - dest: 0.0.0.0/0
                gw: igw
      register: vpc_result
    - set_fact:
        vpc_id: "{{ vpc_result.vpc_id }}"
        vpc_subnet_id: "{{ vpc_result.subnets[0]['id'] }}"

    - ec2_group:
        name: cuda-host
        description: security group for ssh access to host for installation
        vpc_id: "{{ vpc_id }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0

    - ec2:
        key_name: ubuntu_key
        instance_type: t2.micro
        instance_tags:
          Name: ubuntu-cuda-host
        image: "{{ ami_find.ami }}"
        wait: yes
        group: cuda-host
        exact_count: 1
        count_tag:
          Name: ubuntu-cuda-host
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        assign_public_ip: yes
      register: ec2

    - add_host:
        hostname: "{{ ec2['tagged_instances'][0]['public_ip'] }}"
        groups: ubuntu-cuda-host


- hosts: ubuntu-cuda-host
  sudo: yes
  gather_facts: false
  remote_user: ubuntu
  tasks:
    - apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      with_items:
        - gcc
        - linux-source
        - linux-image-virtual
        - linux-image-extra-virtual

    - get_url:
        url: http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_7.0-28_amd64.deb
        dest: ~/cuda-installer.deb
      register: get_url_result

    - command: dpkg -i ~/cuda-installer.deb

    - apt:
        name: cuda
        state: present
        update_cache: true

    - file:
        path: ~/cuda-installer.deb
        state: absent

    - lineinfile:
        dest: /etc/environment
        regexp: '^(PATH=\")(.*)$'
        line: '\1/usr/local/cuda-7.0/bin:\2'
        backrefs: yes

    - lineinfile:
        dest: /etc/environment
        line: 'LD_LIBRARY_PATH="/usr/local/cuda-7.0/lib64"'

    - copy:
        src: blacklist-nouveau.conf
        dest: /etc/modprobe.d/blacklist-nouveau.conf

    - lineinfile:
        create: true
        state: present
        dest: /etc/modprobe.d/nouveau-kms.conf
        line: options nouveau modeset=0

    - command: update-initramfs -u





